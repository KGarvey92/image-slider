{"version":3,"file":"main.js","mappings":"mBAAA,SAASA,EAAkBC,EAAWC,GAEpC,MAAMC,EAAeF,EAAUG,cAAc,uBACvCC,EAAeF,EAAaG,QAAQC,MAG1CJ,EAAaK,gBAAgB,eAGrBH,IAEDI,OAAOP,EAAOQ,OAAQ,GACzBR,EAAO,GAAGS,aAAa,cAAe,IAKtCT,EADkBU,OAAOP,GAAgB,GACvBM,aAAa,cAAe,GAGpD,EAsCA,SAAqBE,EAAkB,QAASC,EAAe,SAAUC,EAAS,KACjF,MAAMd,EAAYe,SAASZ,cAAcS,GACnCX,EAASD,EAAUgB,iBAAiBH,GAGnCI,EAAUF,SAASG,cAAc,OACvCD,EAAQP,aAAa,MAAO,yBAC5BO,EAAQP,aAAa,MAAO,cAC5BO,EAAQE,UAAUC,IAAI,YACtBpB,EAAUqB,YAAYJ,GAGtB,MAAMK,EAAUP,SAASG,cAAc,OACvCI,EAAQZ,aAAa,MAAO,0BAC5BY,EAAQZ,aAAa,MAAO,kBAC5BY,EAAQH,UAAUC,IAAI,YACtBpB,EAAUqB,YAAYC,GAGtB,IAAK,IAAIC,EAAI,EAAGA,EAAItB,EAAOQ,OAAQc,IACjCtB,EAAOsB,GAAGb,aAAa,aAAca,GAG3B,IAANA,GACFtB,EAAOsB,GAAGb,aAAa,cAAe,IAQ1C,IAAIc,GA9CN,SAAsBxB,EAAWC,GAC/B,IAAIwB,EAAeV,SAASG,cAAc,OAC1CO,EAAaN,UAAUC,IAAI,WAE3B,IAAK,IAAIG,EAAI,EAAGA,EAAItB,EAAOQ,OAAQc,IAAK,CACtC,IAAIG,EAAMX,SAASG,cAAc,OACjCQ,EAAIP,UAAUC,IAAI,OAClBM,EAAIhB,aAAa,aAAca,GAC/BE,EAAaJ,YAAYK,EAC3B,CAEA1B,EAAUqB,YAAYI,EACxB,CA+BEE,CAAa3B,EAAWC,GAKP,IAAba,IACFU,EAAQI,aAAY,KAClB7B,EAAkBC,EAAWC,EAAO,GACnCa,IAKLQ,EAAQO,iBAAiB,SAAS,KAChC9B,EAAkBC,EAAWC,GACzBuB,IACFM,cAAcN,GACdA,EAAQI,aAAY,KAClB7B,EAAkBC,EAAWC,EAAO,GACnCa,GACL,IAGFG,EAAQY,iBAAiB,SAAS,MAxFpC,SAA4B7B,EAAWC,GAErC,MAAMC,EAAeF,EAAUG,cAAc,uBACvCC,EAAeF,EAAaG,QAAQC,MAG1CJ,EAAaK,gBAAgB,eAKtB,MAFCH,EAGJH,EAAOA,EAAOQ,OAAS,GAAGC,aAAa,cAAe,IAKtDT,EADkBU,OAAOP,GAAgB,GACvBM,aAAa,cAAe,GAGpD,CAqEIqB,CAAmB/B,EAAWC,GAC1BuB,IACFM,cAAcN,GACdA,EAAQI,aAAY,KAClB7B,EAAkBC,EAAWC,EAAO,GACnCa,GACL,GAGJ,CCtHAkB,E","sources":["webpack://@kgarvey92/image-slider/./dist/image-slider.js","webpack://@kgarvey92/image-slider/./test/src/index.js"],"sourcesContent":["function moveSliderForward(container, slides) {\n  // initialise currentIndex = index of data-active\n  const currentSlide = container.querySelector('.slide[data-active]');\n  const currentIndex = currentSlide.dataset.index;\n  \n  // remove data-active from current slide\n  currentSlide.removeAttribute('data-active');\n\n  // check if currentIndex is equal to last index in nodelist\n  switch (currentIndex) {\n    // if so move data-active back to index 0.\n    case String(slides.length -1):\n      slides[0].setAttribute('data-active', '');\n      break;\n    // else move data-active to current index +1.\n    default:\n      const nextIndex = Number(currentIndex) + 1;\n      slides[nextIndex].setAttribute('data-active', '');\n      break;\n  }\n}\n\nfunction moveSliderBackward(container, slides) {\n  // initialise currentIndex = index of data-active\n  const currentSlide = container.querySelector('.slide[data-active]');\n  const currentIndex = currentSlide.dataset.index;\n  \n  // remove data-active from current slide\n  currentSlide.removeAttribute('data-active');\n\n  // check if currentIndex is equal to first index in nodelist\n  switch (currentIndex) {\n    // if so move data-active to last index.\n    case '0':\n      slides[slides.length - 1].setAttribute('data-active', '');\n      break;\n    // else move data-active to current index - 1.\n    default:\n      const prevIndex = Number(currentIndex) - 1;\n      slides[prevIndex].setAttribute('data-active', '');\n      break;\n  }\n}\n\nfunction createDotBar(container, slides) {\n  let dotContainer = document.createElement('div');\n  dotContainer.classList.add('dot-bar');\n\n  for (let i = 0; i < slides.length; i++) {\n    let dot = document.createElement('div');\n    dot.classList.add('dot');\n    dot.setAttribute('data-index', i);\n    dotContainer.appendChild(dot);\n  }\n\n  container.appendChild(dotContainer);\n}\n\nfunction setupSlider(containerSelector='.reel', slidesSelector='.slide', interval=5000)  {\n const container = document.querySelector(containerSelector);\n const slides = container.querySelectorAll(slidesSelector);\n\n  //Create and append previous image button\n  const prevBtn = document.createElement('img');\n  prevBtn.setAttribute('src', 'images/arrow-left.svg');\n  prevBtn.setAttribute('alt', 'back arrow');\n  prevBtn.classList.add('prev-btn');\n  container.appendChild(prevBtn);\n\n  //Create and append next image button\n  const nextBtn = document.createElement('img');\n  nextBtn.setAttribute('src', 'images/arrow-right.svg');\n  nextBtn.setAttribute('alt', 'foorward arrow');\n  nextBtn.classList.add('next-btn');\n  container.appendChild(nextBtn);\n\n  // apply data indexes to each slide\n  for (let i = 0; i < slides.length; i++) {\n    slides[i].setAttribute('data-index', i);\n    \n    // apply data-active to first index\n    if (i === 0) {\n      slides[i].setAttribute('data-active', \"\");\n    }\n  }\n\n  // create horizontal dot row\n  createDotBar(container, slides);\n\n  // set timer to advance slides if chosen\n  let timer;\n\n  if (interval !== 0) {\n    timer = setInterval(() => {\n      moveSliderForward(container, slides);\n    }, interval);\n  }\n  \n  // Add event listeners to buttons\n\n  nextBtn.addEventListener('click', () => {\n    moveSliderForward(container, slides);\n    if (timer) {\n      clearInterval(timer);\n      timer = setInterval(() => {\n        moveSliderForward(container, slides);\n      }, interval);\n    }\n  } );\n\n  prevBtn.addEventListener('click', () => {\n    moveSliderBackward(container, slides);\n    if (timer) {\n      clearInterval(timer);\n      timer = setInterval(() => {\n        moveSliderForward(container, slides);\n      }, interval);\n    }\n  } );\n\n}\n\n\n\n\nexport {setupSlider};","import { setupSlider } from \"../../dist/image-slider\";\n\nsetupSlider();"],"names":["moveSliderForward","container","slides","currentSlide","querySelector","currentIndex","dataset","index","removeAttribute","String","length","setAttribute","Number","containerSelector","slidesSelector","interval","document","querySelectorAll","prevBtn","createElement","classList","add","appendChild","nextBtn","i","timer","dotContainer","dot","createDotBar","setInterval","addEventListener","clearInterval","moveSliderBackward","setupSlider"],"sourceRoot":""}